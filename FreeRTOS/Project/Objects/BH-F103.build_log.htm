<html>
<body>
<pre>
<h1>µVision Build Log</h1>
<h2>Tool Versions:</h2>
IDE-Version: ¦ÌVision V5.24.2.86
Copyright (C) 2017 ARM Ltd and ARM Germany GmbH. All rights reserved.
License Information:  ,  , LIC=HN0AE-58E76-8TC3P-M9G68-TJ5CI-TT65A
 
Tool Versions:
Toolchain:       MDK-ARM Plus  Version: 5.26.2.0
Toolchain Path:  D:\Keil_v5\ARM\ARMCC\Bin
C Compiler:      Armcc.exe V5.06 update 6 (build 750)
Assembler:       Armasm.exe V5.06 update 6 (build 750)
Linker/Locator:  ArmLink.exe V5.06 update 6 (build 750)
Library Manager: ArmAr.exe V5.06 update 6 (build 750)
Hex Converter:   FromElf.exe V5.06 update 6 (build 750)
CPU DLL:         SARMCM3.DLL V5.26.2.0
Dialog DLL:      DCM.DLL V1.17.2.0
Target DLL:      STLink\ST-LINKIII-KEIL_SWO.dll V3.0.5.0
Dialog DLL:      TCM.DLL V1.36.1.0
 
<h2>Project:</h2>
E:\project\STM32_BSP\FreeRTOS\Project\BH-F103.uvprojx
Project File Date:  06/08/2023

<h2>Output:</h2>
*** Using Compiler 'V5.06 update 6 (build 750)', folder: 'D:\Keil_v5\ARM\ARMCC\Bin'
Build target 'Target 1'
compiling bsp_dht11.c...
..\FreeRTOS\include\list.h(184): error:  #20: identifier "TickType_t" is undefined
  	configLIST_VOLATILE TickType_t xItemValue;			/*< The value being listed.  In most cases this is used to sort the list in descending order. */
..\FreeRTOS\include\list.h(196): error:  #20: identifier "TickType_t" is undefined
  	configLIST_VOLATILE TickType_t xItemValue;
..\FreeRTOS\include\list.h(208): error:  #20: identifier "UBaseType_t" is undefined
  	configLIST_VOLATILE UBaseType_t uxNumberOfItems;
..\FreeRTOS\include\list.h(386): error:  #130: expected a "{"
  void vListInitialise( List_t * const pxList ) PRIVILEGED_FUNCTION;
..\FreeRTOS\include\task.h(113): warning:  #12-D: parsing restarts here after previous syntax error
  {
..\FreeRTOS\include\task.h(114): error:  #20: identifier "eRunning" is undefined
  	eRunning = 0,	/* A task is querying the state of itself, so must be running. */
..\FreeRTOS\include\task.h(115): error:  #20: identifier "eReady" is undefined
  	eReady,			/* The task being queried is in a read or pending ready list. */
..\FreeRTOS\include\task.h(116): error:  #20: identifier "eBlocked" is undefined
  	eBlocked,		/* The task being queried is in the Blocked state. */
..\FreeRTOS\include\task.h(117): error:  #20: identifier "eSuspended" is undefined
  	eSuspended,		/* The task being queried is in the Suspended state, or is in the Blocked state with an infinite time out. */
..\FreeRTOS\include\task.h(118): error:  #20: identifier "eDeleted" is undefined
  	eDeleted,		/* The task being queried has been deleted, but its TCB has not yet been freed. */
..\FreeRTOS\include\task.h(119): error:  #20: identifier "eInvalid" is undefined
  	eInvalid			/* Used as an 'invalid state' value. */
..\FreeRTOS\include\task.h(120): error:  #65: expected a ";"
  } eTaskState;
..\FreeRTOS\include\task.h(120): error:  #77-D: this declaration has no storage class or type specifier
  } eTaskState;
..\FreeRTOS\include\task.h(137): error:  #20: identifier "BaseType_t" is undefined
  	BaseType_t xOverflowCount;
..\FreeRTOS\include\task.h(138): error:  #20: identifier "TickType_t" is undefined
  	TickType_t xTimeOnEntering;
..\FreeRTOS\include\task.h(156): error:  #20: identifier "TaskFunction_t" is undefined
  	TaskFunction_t pvTaskCode;
..\FreeRTOS\include\task.h(160): error:  #20: identifier "UBaseType_t" is undefined
  	UBaseType_t uxPriority;
..\FreeRTOS\include\task.h(161): error:  #20: identifier "StackType_t" is undefined
  	StackType_t *puxStackBuffer;
..\FreeRTOS\include\task.h(162): error:  #20: identifier "portNUM_CONFIGURABLE_REGIONS" is undefined
  	MemoryRegion_t xRegions[ portNUM_CONFIGURABLE_REGIONS ];
..\FreeRTOS\include\task.h(169): error:  #20: identifier "TaskHandle_t" is undefined
  	TaskHandle_t xHandle;			/* The handle of the task to which the rest of the information in the structure relates. */
..\FreeRTOS\include\task.h(171): error:  #20: identifier "UBaseType_t" is undefined
  	UBaseType_t xTaskNumber;		/* A number unique to the task. */
..\FreeRTOS\include\task.h(172): error:  #757: variable "eTaskState"  is not a type name
  	eTaskState eCurrentState;		/* The state in which the task existed when the structure was populated. */
..\FreeRTOS\include\task.h(173): error:  #20: identifier "UBaseType_t" is undefined
  	UBaseType_t uxCurrentPriority;	/* The priority at which the task was running (may be inherited) when the structure was populated. */
..\FreeRTOS\include\task.h(174): error:  #20: identifier "UBaseType_t" is undefined
  	UBaseType_t uxBasePriority;		/* The priority to which the task will return if the task's current priority has been inherited to avoid unbounded priority inversion when obtaining a mutex.  Only valid if configUSE_MUTEXES is defined as 1 in FreeRTOSConfig.h. */
..\FreeRTOS\include\task.h(176): error:  #20: identifier "StackType_t" is undefined
  	StackType_t *pxStackBase;		/* Points to the lowest address of the task's stack area. */
..\FreeRTOS\include\task.h(602): error:  #20: identifier "TaskHandle_t" is undefined
  void vTaskAllocateMPURegions( TaskHandle_t xTask, const MemoryRegion_t * const pxRegions ) PRIVILEGED_FUNCTION;
..\FreeRTOS\include\task.h(602): error:  #130: expected a "{"
  void vTaskAllocateMPURegions( TaskHandle_t xTask, const MemoryRegion_t * const pxRegions ) PRIVILEGED_FUNCTION;
D:\Keil_v5\ARM\ARMCC\Bin\..\include\stdio.h(551): error:  #20: identifier "__va_list" is undefined
  extern _ARMABI int vfscanf(FILE * __restrict /*stream*/, const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1,2)));
D:\Keil_v5\ARM\ARMCC\Bin\..\include\stdio.h(552): error:  #20: identifier "__va_list" is undefined
  extern _ARMABI int vscanf(const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1)));
D:\Keil_v5\ARM\ARMCC\Bin\..\include\stdio.h(553): error:  #20: identifier "__va_list" is undefined
  extern _ARMABI int vsscanf(const char * __restrict /*s*/, const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1,2)));
D:\Keil_v5\ARM\ARMCC\Bin\..\include\stdio.h(555): error:  #20: identifier "__va_list" is undefined
  extern _ARMABI int _vfscanf(FILE * __restrict /*stream*/, const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1,2)));
..\BSP\dht11\bsp_dht11.c: 1 warning, 30 errors
compiling event_groups.c...
..\FreeRTOS\include\list.h(184): error:  #20: identifier "TickType_t" is undefined
  	configLIST_VOLATILE TickType_t xItemValue;			/*< The value being listed.  In most cases this is used to sort the list in descending order. */
..\FreeRTOS\include\list.h(196): error:  #20: identifier "TickType_t" is undefined
  	configLIST_VOLATILE TickType_t xItemValue;
..\FreeRTOS\include\list.h(208): error:  #20: identifier "UBaseType_t" is undefined
  	configLIST_VOLATILE UBaseType_t uxNumberOfItems;
..\FreeRTOS\include\list.h(386): error:  #130: expected a "{"
  void vListInitialise( List_t * const pxList ) PRIVILEGED_FUNCTION;
..\FreeRTOS\include\task.h(113): warning:  #12-D: parsing restarts here after previous syntax error
  {
..\FreeRTOS\include\task.h(114): error:  #20: identifier "eRunning" is undefined
  	eRunning = 0,	/* A task is querying the state of itself, so must be running. */
..\FreeRTOS\include\task.h(115): error:  #20: identifier "eReady" is undefined
  	eReady,			/* The task being queried is in a read or pending ready list. */
..\FreeRTOS\include\task.h(116): error:  #20: identifier "eBlocked" is undefined
  	eBlocked,		/* The task being queried is in the Blocked state. */
..\FreeRTOS\include\task.h(117): error:  #20: identifier "eSuspended" is undefined
  	eSuspended,		/* The task being queried is in the Suspended state, or is in the Blocked state with an infinite time out. */
..\FreeRTOS\include\task.h(118): error:  #20: identifier "eDeleted" is undefined
  	eDeleted,		/* The task being queried has been deleted, but its TCB has not yet been freed. */
..\FreeRTOS\include\task.h(119): error:  #20: identifier "eInvalid" is undefined
  	eInvalid			/* Used as an 'invalid state' value. */
..\FreeRTOS\include\task.h(120): error:  #65: expected a ";"
  } eTaskState;
..\FreeRTOS\include\task.h(120): error:  #77-D: this declaration has no storage class or type specifier
  } eTaskState;
..\FreeRTOS\include\task.h(137): error:  #20: identifier "BaseType_t" is undefined
  	BaseType_t xOverflowCount;
..\FreeRTOS\include\task.h(138): error:  #20: identifier "TickType_t" is undefined
  	TickType_t xTimeOnEntering;
..\FreeRTOS\include\task.h(156): error:  #20: identifier "TaskFunction_t" is undefined
  	TaskFunction_t pvTaskCode;
..\FreeRTOS\include\task.h(160): error:  #20: identifier "UBaseType_t" is undefined
  	UBaseType_t uxPriority;
..\FreeRTOS\include\task.h(161): error:  #20: identifier "StackType_t" is undefined
  	StackType_t *puxStackBuffer;
..\FreeRTOS\include\task.h(162): error:  #20: identifier "portNUM_CONFIGURABLE_REGIONS" is undefined
  	MemoryRegion_t xRegions[ portNUM_CONFIGURABLE_REGIONS ];
..\FreeRTOS\include\task.h(169): error:  #20: identifier "TaskHandle_t" is undefined
  	TaskHandle_t xHandle;			/* The handle of the task to which the rest of the information in the structure relates. */
..\FreeRTOS\include\task.h(171): error:  #20: identifier "UBaseType_t" is undefined
  	UBaseType_t xTaskNumber;		/* A number unique to the task. */
..\FreeRTOS\include\task.h(172): error:  #757: variable "eTaskState"  is not a type name
  	eTaskState eCurrentState;		/* The state in which the task existed when the structure was populated. */
..\FreeRTOS\include\task.h(173): error:  #20: identifier "UBaseType_t" is undefined
  	UBaseType_t uxCurrentPriority;	/* The priority at which the task was running (may be inherited) when the structure was populated. */
..\FreeRTOS\include\task.h(174): error:  #20: identifier "UBaseType_t" is undefined
  	UBaseType_t uxBasePriority;		/* The priority to which the task will return if the task's current priority has been inherited to avoid unbounded priority inversion when obtaining a mutex.  Only valid if configUSE_MUTEXES is defined as 1 in FreeRTOSConfig.h. */
..\FreeRTOS\include\task.h(176): error:  #20: identifier "StackType_t" is undefined
  	StackType_t *pxStackBase;		/* Points to the lowest address of the task's stack area. */
..\FreeRTOS\include\task.h(602): error:  #20: identifier "TaskHandle_t" is undefined
  void vTaskAllocateMPURegions( TaskHandle_t xTask, const MemoryRegion_t * const pxRegions ) PRIVILEGED_FUNCTION;
..\FreeRTOS\include\task.h(602): error:  #130: expected a "{"
  void vTaskAllocateMPURegions( TaskHandle_t xTask, const MemoryRegion_t * const pxRegions ) PRIVILEGED_FUNCTION;
D:\Keil_v5\ARM\ARMCC\Bin\..\include\stdio.h(551): error:  #20: identifier "__va_list" is undefined
  extern _ARMABI int vfscanf(FILE * __restrict /*stream*/, const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1,2)));
D:\Keil_v5\ARM\ARMCC\Bin\..\include\stdio.h(552): error:  #20: identifier "__va_list" is undefined
  extern _ARMABI int vscanf(const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1)));
D:\Keil_v5\ARM\ARMCC\Bin\..\include\stdio.h(553): error:  #20: identifier "__va_list" is undefined
  extern _ARMABI int vsscanf(const char * __restrict /*s*/, const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1,2)));
D:\Keil_v5\ARM\ARMCC\Bin\..\include\stdio.h(555): error:  #20: identifier "__va_list" is undefined
  extern _ARMABI int _vfscanf(FILE * __restrict /*stream*/, const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1,2)));
..\FreeRTOS\src\event_groups.c: 1 warning, 30 errors
compiling main.c...
..\FreeRTOS\include\list.h(184): error:  #20: identifier "TickType_t" is undefined
  	configLIST_VOLATILE TickType_t xItemValue;			/*< The value being listed.  In most cases this is used to sort the list in descending order. */
..\FreeRTOS\include\list.h(196): error:  #20: identifier "TickType_t" is undefined
  	configLIST_VOLATILE TickType_t xItemValue;
..\FreeRTOS\include\list.h(208): error:  #20: identifier "UBaseType_t" is undefined
  	configLIST_VOLATILE UBaseType_t uxNumberOfItems;
..\FreeRTOS\include\list.h(386): error:  #130: expected a "{"
  void vListInitialise( List_t * const pxList ) PRIVILEGED_FUNCTION;
..\FreeRTOS\include\task.h(113): warning:  #12-D: parsing restarts here after previous syntax error
  {
..\FreeRTOS\include\task.h(114): error:  #20: identifier "eRunning" is undefined
  	eRunning = 0,	/* A task is querying the state of itself, so must be running. */
..\FreeRTOS\include\task.h(115): error:  #20: identifier "eReady" is undefined
  	eReady,			/* The task being queried is in a read or pending ready list. */
..\FreeRTOS\include\task.h(116): error:  #20: identifier "eBlocked" is undefined
  	eBlocked,		/* The task being queried is in the Blocked state. */
..\FreeRTOS\include\task.h(117): error:  #20: identifier "eSuspended" is undefined
  	eSuspended,		/* The task being queried is in the Suspended state, or is in the Blocked state with an infinite time out. */
..\FreeRTOS\include\task.h(118): error:  #20: identifier "eDeleted" is undefined
  	eDeleted,		/* The task being queried has been deleted, but its TCB has not yet been freed. */
..\FreeRTOS\include\task.h(119): error:  #20: identifier "eInvalid" is undefined
  	eInvalid			/* Used as an 'invalid state' value. */
..\FreeRTOS\include\task.h(120): error:  #65: expected a ";"
  } eTaskState;
..\FreeRTOS\include\task.h(120): error:  #77-D: this declaration has no storage class or type specifier
  } eTaskState;
..\FreeRTOS\include\task.h(137): error:  #20: identifier "BaseType_t" is undefined
  	BaseType_t xOverflowCount;
..\FreeRTOS\include\task.h(138): error:  #20: identifier "TickType_t" is undefined
  	TickType_t xTimeOnEntering;
..\FreeRTOS\include\task.h(156): error:  #20: identifier "TaskFunction_t" is undefined
  	TaskFunction_t pvTaskCode;
..\FreeRTOS\include\task.h(160): error:  #20: identifier "UBaseType_t" is undefined
  	UBaseType_t uxPriority;
..\FreeRTOS\include\task.h(161): error:  #20: identifier "StackType_t" is undefined
  	StackType_t *puxStackBuffer;
..\FreeRTOS\include\task.h(162): error:  #20: identifier "portNUM_CONFIGURABLE_REGIONS" is undefined
  	MemoryRegion_t xRegions[ portNUM_CONFIGURABLE_REGIONS ];
..\FreeRTOS\include\task.h(169): error:  #20: identifier "TaskHandle_t" is undefined
  	TaskHandle_t xHandle;			/* The handle of the task to which the rest of the information in the structure relates. */
..\FreeRTOS\include\task.h(171): error:  #20: identifier "UBaseType_t" is undefined
  	UBaseType_t xTaskNumber;		/* A number unique to the task. */
..\FreeRTOS\include\task.h(172): error:  #757: variable "eTaskState"  is not a type name
  	eTaskState eCurrentState;		/* The state in which the task existed when the structure was populated. */
..\FreeRTOS\include\task.h(173): error:  #20: identifier "UBaseType_t" is undefined
  	UBaseType_t uxCurrentPriority;	/* The priority at which the task was running (may be inherited) when the structure was populated. */
..\FreeRTOS\include\task.h(174): error:  #20: identifier "UBaseType_t" is undefined
  	UBaseType_t uxBasePriority;		/* The priority to which the task will return if the task's current priority has been inherited to avoid unbounded priority inversion when obtaining a mutex.  Only valid if configUSE_MUTEXES is defined as 1 in FreeRTOSConfig.h. */
..\FreeRTOS\include\task.h(176): error:  #20: identifier "StackType_t" is undefined
  	StackType_t *pxStackBase;		/* Points to the lowest address of the task's stack area. */
..\FreeRTOS\include\task.h(602): error:  #20: identifier "TaskHandle_t" is undefined
  void vTaskAllocateMPURegions( TaskHandle_t xTask, const MemoryRegion_t * const pxRegions ) PRIVILEGED_FUNCTION;
..\FreeRTOS\include\task.h(602): error:  #130: expected a "{"
  void vTaskAllocateMPURegions( TaskHandle_t xTask, const MemoryRegion_t * const pxRegions ) PRIVILEGED_FUNCTION;
D:\Keil_v5\ARM\ARMCC\Bin\..\include\stdio.h(551): error:  #20: identifier "__va_list" is undefined
  extern _ARMABI int vfscanf(FILE * __restrict /*stream*/, const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1,2)));
D:\Keil_v5\ARM\ARMCC\Bin\..\include\stdio.h(552): error:  #20: identifier "__va_list" is undefined
  extern _ARMABI int vscanf(const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1)));
D:\Keil_v5\ARM\ARMCC\Bin\..\include\stdio.h(553): error:  #20: identifier "__va_list" is undefined
  extern _ARMABI int vsscanf(const char * __restrict /*s*/, const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1,2)));
D:\Keil_v5\ARM\ARMCC\Bin\..\include\stdio.h(555): error:  #20: identifier "__va_list" is undefined
  extern _ARMABI int _vfscanf(FILE * __restrict /*stream*/, const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1,2)));
..\User\main.c: 1 warning, 30 errors
compiling croutine.c...
..\FreeRTOS\include\list.h(184): error:  #20: identifier "TickType_t" is undefined
  	configLIST_VOLATILE TickType_t xItemValue;			/*< The value being listed.  In most cases this is used to sort the list in descending order. */
..\FreeRTOS\include\list.h(196): error:  #20: identifier "TickType_t" is undefined
  	configLIST_VOLATILE TickType_t xItemValue;
..\FreeRTOS\include\list.h(208): error:  #20: identifier "UBaseType_t" is undefined
  	configLIST_VOLATILE UBaseType_t uxNumberOfItems;
..\FreeRTOS\include\list.h(386): error:  #130: expected a "{"
  void vListInitialise( List_t * const pxList ) PRIVILEGED_FUNCTION;
..\FreeRTOS\include\task.h(113): warning:  #12-D: parsing restarts here after previous syntax error
  {
..\FreeRTOS\include\task.h(114): error:  #20: identifier "eRunning" is undefined
  	eRunning = 0,	/* A task is querying the state of itself, so must be running. */
..\FreeRTOS\include\task.h(115): error:  #20: identifier "eReady" is undefined
  	eReady,			/* The task being queried is in a read or pending ready list. */
..\FreeRTOS\include\task.h(116): error:  #20: identifier "eBlocked" is undefined
  	eBlocked,		/* The task being queried is in the Blocked state. */
..\FreeRTOS\include\task.h(117): error:  #20: identifier "eSuspended" is undefined
  	eSuspended,		/* The task being queried is in the Suspended state, or is in the Blocked state with an infinite time out. */
..\FreeRTOS\include\task.h(118): error:  #20: identifier "eDeleted" is undefined
  	eDeleted,		/* The task being queried has been deleted, but its TCB has not yet been freed. */
..\FreeRTOS\include\task.h(119): error:  #20: identifier "eInvalid" is undefined
  	eInvalid			/* Used as an 'invalid state' value. */
..\FreeRTOS\include\task.h(120): error:  #65: expected a ";"
  } eTaskState;
..\FreeRTOS\include\task.h(120): error:  #77-D: this declaration has no storage class or type specifier
  } eTaskState;
..\FreeRTOS\include\task.h(137): error:  #20: identifier "BaseType_t" is undefined
  	BaseType_t xOverflowCount;
..\FreeRTOS\include\task.h(138): error:  #20: identifier "TickType_t" is undefined
  	TickType_t xTimeOnEntering;
..\FreeRTOS\include\task.h(156): error:  #20: identifier "TaskFunction_t" is undefined
  	TaskFunction_t pvTaskCode;
..\FreeRTOS\include\task.h(160): error:  #20: identifier "UBaseType_t" is undefined
  	UBaseType_t uxPriority;
..\FreeRTOS\include\task.h(161): error:  #20: identifier "StackType_t" is undefined
  	StackType_t *puxStackBuffer;
..\FreeRTOS\include\task.h(162): error:  #20: identifier "portNUM_CONFIGURABLE_REGIONS" is undefined
  	MemoryRegion_t xRegions[ portNUM_CONFIGURABLE_REGIONS ];
..\FreeRTOS\include\task.h(169): error:  #20: identifier "TaskHandle_t" is undefined
  	TaskHandle_t xHandle;			/* The handle of the task to which the rest of the information in the structure relates. */
..\FreeRTOS\include\task.h(171): error:  #20: identifier "UBaseType_t" is undefined
  	UBaseType_t xTaskNumber;		/* A number unique to the task. */
..\FreeRTOS\include\task.h(172): error:  #757: variable "eTaskState"  is not a type name
  	eTaskState eCurrentState;		/* The state in which the task existed when the structure was populated. */
..\FreeRTOS\include\task.h(173): error:  #20: identifier "UBaseType_t" is undefined
  	UBaseType_t uxCurrentPriority;	/* The priority at which the task was running (may be inherited) when the structure was populated. */
..\FreeRTOS\include\task.h(174): error:  #20: identifier "UBaseType_t" is undefined
  	UBaseType_t uxBasePriority;		/* The priority to which the task will return if the task's current priority has been inherited to avoid unbounded priority inversion when obtaining a mutex.  Only valid if configUSE_MUTEXES is defined as 1 in FreeRTOSConfig.h. */
..\FreeRTOS\include\task.h(176): error:  #20: identifier "StackType_t" is undefined
  	StackType_t *pxStackBase;		/* Points to the lowest address of the task's stack area. */
..\FreeRTOS\include\task.h(602): error:  #20: identifier "TaskHandle_t" is undefined
  void vTaskAllocateMPURegions( TaskHandle_t xTask, const MemoryRegion_t * const pxRegions ) PRIVILEGED_FUNCTION;
..\FreeRTOS\include\task.h(602): error:  #130: expected a "{"
  void vTaskAllocateMPURegions( TaskHandle_t xTask, const MemoryRegion_t * const pxRegions ) PRIVILEGED_FUNCTION;
D:\Keil_v5\ARM\ARMCC\Bin\..\include\stdio.h(551): error:  #20: identifier "__va_list" is undefined
  extern _ARMABI int vfscanf(FILE * __restrict /*stream*/, const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1,2)));
D:\Keil_v5\ARM\ARMCC\Bin\..\include\stdio.h(552): error:  #20: identifier "__va_list" is undefined
  extern _ARMABI int vscanf(const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1)));
D:\Keil_v5\ARM\ARMCC\Bin\..\include\stdio.h(553): error:  #20: identifier "__va_list" is undefined
  extern _ARMABI int vsscanf(const char * __restrict /*s*/, const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1,2)));
D:\Keil_v5\ARM\ARMCC\Bin\..\include\stdio.h(555): error:  #20: identifier "__va_list" is undefined
  extern _ARMABI int _vfscanf(FILE * __restrict /*stream*/, const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1,2)));
..\FreeRTOS\src\croutine.c: 1 warning, 30 errors
compiling stm32f10x_it.c...
..\FreeRTOS\include\list.h(184): error:  #20: identifier "TickType_t" is undefined
  	configLIST_VOLATILE TickType_t xItemValue;			/*< The value being listed.  In most cases this is used to sort the list in descending order. */
..\FreeRTOS\include\list.h(196): error:  #20: identifier "TickType_t" is undefined
  	configLIST_VOLATILE TickType_t xItemValue;
..\FreeRTOS\include\list.h(208): error:  #20: identifier "UBaseType_t" is undefined
  	configLIST_VOLATILE UBaseType_t uxNumberOfItems;
..\FreeRTOS\include\list.h(386): error:  #130: expected a "{"
  void vListInitialise( List_t * const pxList ) PRIVILEGED_FUNCTION;
..\FreeRTOS\include\task.h(113): warning:  #12-D: parsing restarts here after previous syntax error
  {
..\FreeRTOS\include\task.h(114): error:  #20: identifier "eRunning" is undefined
  	eRunning = 0,	/* A task is querying the state of itself, so must be running. */
..\FreeRTOS\include\task.h(115): error:  #20: identifier "eReady" is undefined
  	eReady,			/* The task being queried is in a read or pending ready list. */
..\FreeRTOS\include\task.h(116): error:  #20: identifier "eBlocked" is undefined
  	eBlocked,		/* The task being queried is in the Blocked state. */
..\FreeRTOS\include\task.h(117): error:  #20: identifier "eSuspended" is undefined
  	eSuspended,		/* The task being queried is in the Suspended state, or is in the Blocked state with an infinite time out. */
..\FreeRTOS\include\task.h(118): error:  #20: identifier "eDeleted" is undefined
  	eDeleted,		/* The task being queried has been deleted, but its TCB has not yet been freed. */
..\FreeRTOS\include\task.h(119): error:  #20: identifier "eInvalid" is undefined
  	eInvalid			/* Used as an 'invalid state' value. */
..\FreeRTOS\include\task.h(120): error:  #65: expected a ";"
  } eTaskState;
..\FreeRTOS\include\task.h(120): error:  #77-D: this declaration has no storage class or type specifier
  } eTaskState;
..\FreeRTOS\include\task.h(137): error:  #20: identifier "BaseType_t" is undefined
  	BaseType_t xOverflowCount;
..\FreeRTOS\include\task.h(138): error:  #20: identifier "TickType_t" is undefined
  	TickType_t xTimeOnEntering;
..\FreeRTOS\include\task.h(156): error:  #20: identifier "TaskFunction_t" is undefined
  	TaskFunction_t pvTaskCode;
..\FreeRTOS\include\task.h(160): error:  #20: identifier "UBaseType_t" is undefined
  	UBaseType_t uxPriority;
..\FreeRTOS\include\task.h(161): error:  #20: identifier "StackType_t" is undefined
  	StackType_t *puxStackBuffer;
..\FreeRTOS\include\task.h(162): error:  #20: identifier "portNUM_CONFIGURABLE_REGIONS" is undefined
  	MemoryRegion_t xRegions[ portNUM_CONFIGURABLE_REGIONS ];
..\FreeRTOS\include\task.h(169): error:  #20: identifier "TaskHandle_t" is undefined
  	TaskHandle_t xHandle;			/* The handle of the task to which the rest of the information in the structure relates. */
..\FreeRTOS\include\task.h(171): error:  #20: identifier "UBaseType_t" is undefined
  	UBaseType_t xTaskNumber;		/* A number unique to the task. */
..\FreeRTOS\include\task.h(172): error:  #757: variable "eTaskState"  is not a type name
  	eTaskState eCurrentState;		/* The state in which the task existed when the structure was populated. */
..\FreeRTOS\include\task.h(173): error:  #20: identifier "UBaseType_t" is undefined
  	UBaseType_t uxCurrentPriority;	/* The priority at which the task was running (may be inherited) when the structure was populated. */
..\FreeRTOS\include\task.h(174): error:  #20: identifier "UBaseType_t" is undefined
  	UBaseType_t uxBasePriority;		/* The priority to which the task will return if the task's current priority has been inherited to avoid unbounded priority inversion when obtaining a mutex.  Only valid if configUSE_MUTEXES is defined as 1 in FreeRTOSConfig.h. */
..\FreeRTOS\include\task.h(176): error:  #20: identifier "StackType_t" is undefined
  	StackType_t *pxStackBase;		/* Points to the lowest address of the task's stack area. */
..\FreeRTOS\include\task.h(602): error:  #20: identifier "TaskHandle_t" is undefined
  void vTaskAllocateMPURegions( TaskHandle_t xTask, const MemoryRegion_t * const pxRegions ) PRIVILEGED_FUNCTION;
..\FreeRTOS\include\task.h(602): error:  #130: expected a "{"
  void vTaskAllocateMPURegions( TaskHandle_t xTask, const MemoryRegion_t * const pxRegions ) PRIVILEGED_FUNCTION;
D:\Keil_v5\ARM\ARMCC\Bin\..\include\stdio.h(551): error:  #20: identifier "__va_list" is undefined
  extern _ARMABI int vfscanf(FILE * __restrict /*stream*/, const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1,2)));
D:\Keil_v5\ARM\ARMCC\Bin\..\include\stdio.h(552): error:  #20: identifier "__va_list" is undefined
  extern _ARMABI int vscanf(const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1)));
D:\Keil_v5\ARM\ARMCC\Bin\..\include\stdio.h(553): error:  #20: identifier "__va_list" is undefined
  extern _ARMABI int vsscanf(const char * __restrict /*s*/, const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1,2)));
D:\Keil_v5\ARM\ARMCC\Bin\..\include\stdio.h(555): error:  #20: identifier "__va_list" is undefined
  extern _ARMABI int _vfscanf(FILE * __restrict /*stream*/, const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1,2)));
..\User\stm32f10x_it.c: 1 warning, 30 errors
compiling list.c...
..\FreeRTOS\include\list.h(184): error:  #20: identifier "TickType_t" is undefined
  	configLIST_VOLATILE TickType_t xItemValue;			/*< The value being listed.  In most cases this is used to sort the list in descending order. */
..\FreeRTOS\include\list.h(196): error:  #20: identifier "TickType_t" is undefined
  	configLIST_VOLATILE TickType_t xItemValue;
..\FreeRTOS\include\list.h(208): error:  #20: identifier "UBaseType_t" is undefined
  	configLIST_VOLATILE UBaseType_t uxNumberOfItems;
..\FreeRTOS\include\list.h(386): error:  #130: expected a "{"
  void vListInitialise( List_t * const pxList ) PRIVILEGED_FUNCTION;
..\FreeRTOS\include\task.h(113): warning:  #12-D: parsing restarts here after previous syntax error
  {
..\FreeRTOS\include\task.h(114): error:  #20: identifier "eRunning" is undefined
  	eRunning = 0,	/* A task is querying the state of itself, so must be running. */
..\FreeRTOS\include\task.h(115): error:  #20: identifier "eReady" is undefined
  	eReady,			/* The task being queried is in a read or pending ready list. */
..\FreeRTOS\include\task.h(116): error:  #20: identifier "eBlocked" is undefined
  	eBlocked,		/* The task being queried is in the Blocked state. */
..\FreeRTOS\include\task.h(117): error:  #20: identifier "eSuspended" is undefined
  	eSuspended,		/* The task being queried is in the Suspended state, or is in the Blocked state with an infinite time out. */
..\FreeRTOS\include\task.h(118): error:  #20: identifier "eDeleted" is undefined
  	eDeleted,		/* The task being queried has been deleted, but its TCB has not yet been freed. */
..\FreeRTOS\include\task.h(119): error:  #20: identifier "eInvalid" is undefined
  	eInvalid			/* Used as an 'invalid state' value. */
..\FreeRTOS\include\task.h(120): error:  #65: expected a ";"
  } eTaskState;
..\FreeRTOS\include\task.h(120): error:  #77-D: this declaration has no storage class or type specifier
  } eTaskState;
..\FreeRTOS\include\task.h(137): error:  #20: identifier "BaseType_t" is undefined
  	BaseType_t xOverflowCount;
..\FreeRTOS\include\task.h(138): error:  #20: identifier "TickType_t" is undefined
  	TickType_t xTimeOnEntering;
..\FreeRTOS\include\task.h(156): error:  #20: identifier "TaskFunction_t" is undefined
  	TaskFunction_t pvTaskCode;
..\FreeRTOS\include\task.h(160): error:  #20: identifier "UBaseType_t" is undefined
  	UBaseType_t uxPriority;
..\FreeRTOS\include\task.h(161): error:  #20: identifier "StackType_t" is undefined
  	StackType_t *puxStackBuffer;
..\FreeRTOS\include\task.h(162): error:  #20: identifier "portNUM_CONFIGURABLE_REGIONS" is undefined
  	MemoryRegion_t xRegions[ portNUM_CONFIGURABLE_REGIONS ];
..\FreeRTOS\include\task.h(169): error:  #20: identifier "TaskHandle_t" is undefined
  	TaskHandle_t xHandle;			/* The handle of the task to which the rest of the information in the structure relates. */
..\FreeRTOS\include\task.h(171): error:  #20: identifier "UBaseType_t" is undefined
  	UBaseType_t xTaskNumber;		/* A number unique to the task. */
..\FreeRTOS\include\task.h(172): error:  #757: variable "eTaskState"  is not a type name
  	eTaskState eCurrentState;		/* The state in which the task existed when the structure was populated. */
..\FreeRTOS\include\task.h(173): error:  #20: identifier "UBaseType_t" is undefined
  	UBaseType_t uxCurrentPriority;	/* The priority at which the task was running (may be inherited) when the structure was populated. */
..\FreeRTOS\include\task.h(174): error:  #20: identifier "UBaseType_t" is undefined
  	UBaseType_t uxBasePriority;		/* The priority to which the task will return if the task's current priority has been inherited to avoid unbounded priority inversion when obtaining a mutex.  Only valid if configUSE_MUTEXES is defined as 1 in FreeRTOSConfig.h. */
..\FreeRTOS\include\task.h(176): error:  #20: identifier "StackType_t" is undefined
  	StackType_t *pxStackBase;		/* Points to the lowest address of the task's stack area. */
..\FreeRTOS\include\task.h(602): error:  #20: identifier "TaskHandle_t" is undefined
  void vTaskAllocateMPURegions( TaskHandle_t xTask, const MemoryRegion_t * const pxRegions ) PRIVILEGED_FUNCTION;
..\FreeRTOS\include\task.h(602): error:  #130: expected a "{"
  void vTaskAllocateMPURegions( TaskHandle_t xTask, const MemoryRegion_t * const pxRegions ) PRIVILEGED_FUNCTION;
D:\Keil_v5\ARM\ARMCC\Bin\..\include\stdio.h(551): error:  #20: identifier "__va_list" is undefined
  extern _ARMABI int vfscanf(FILE * __restrict /*stream*/, const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1,2)));
D:\Keil_v5\ARM\ARMCC\Bin\..\include\stdio.h(552): error:  #20: identifier "__va_list" is undefined
  extern _ARMABI int vscanf(const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1)));
D:\Keil_v5\ARM\ARMCC\Bin\..\include\stdio.h(553): error:  #20: identifier "__va_list" is undefined
  extern _ARMABI int vsscanf(const char * __restrict /*s*/, const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1,2)));
D:\Keil_v5\ARM\ARMCC\Bin\..\include\stdio.h(555): error:  #20: identifier "__va_list" is undefined
  extern _ARMABI int _vfscanf(FILE * __restrict /*stream*/, const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1,2)));
..\FreeRTOS\src\list.c: 1 warning, 30 errors
compiling bsp_debug.c...
compiling queue.c...
..\FreeRTOS\include\list.h(184): error:  #20: identifier "TickType_t" is undefined
  	configLIST_VOLATILE TickType_t xItemValue;			/*< The value being listed.  In most cases this is used to sort the list in descending order. */
..\FreeRTOS\include\list.h(196): error:  #20: identifier "TickType_t" is undefined
  	configLIST_VOLATILE TickType_t xItemValue;
..\FreeRTOS\include\list.h(208): error:  #20: identifier "UBaseType_t" is undefined
  	configLIST_VOLATILE UBaseType_t uxNumberOfItems;
..\FreeRTOS\include\list.h(386): error:  #130: expected a "{"
  void vListInitialise( List_t * const pxList ) PRIVILEGED_FUNCTION;
..\FreeRTOS\include\task.h(113): warning:  #12-D: parsing restarts here after previous syntax error
  {
..\FreeRTOS\include\task.h(114): error:  #20: identifier "eRunning" is undefined
  	eRunning = 0,	/* A task is querying the state of itself, so must be running. */
..\FreeRTOS\include\task.h(115): error:  #20: identifier "eReady" is undefined
  	eReady,			/* The task being queried is in a read or pending ready list. */
..\FreeRTOS\include\task.h(116): error:  #20: identifier "eBlocked" is undefined
  	eBlocked,		/* The task being queried is in the Blocked state. */
..\FreeRTOS\include\task.h(117): error:  #20: identifier "eSuspended" is undefined
  	eSuspended,		/* The task being queried is in the Suspended state, or is in the Blocked state with an infinite time out. */
..\FreeRTOS\include\task.h(118): error:  #20: identifier "eDeleted" is undefined
  	eDeleted,		/* The task being queried has been deleted, but its TCB has not yet been freed. */
..\FreeRTOS\include\task.h(119): error:  #20: identifier "eInvalid" is undefined
  	eInvalid			/* Used as an 'invalid state' value. */
..\FreeRTOS\include\task.h(120): error:  #65: expected a ";"
  } eTaskState;
..\FreeRTOS\include\task.h(120): error:  #77-D: this declaration has no storage class or type specifier
  } eTaskState;
..\FreeRTOS\include\task.h(137): error:  #20: identifier "BaseType_t" is undefined
  	BaseType_t xOverflowCount;
..\FreeRTOS\include\task.h(138): error:  #20: identifier "TickType_t" is undefined
  	TickType_t xTimeOnEntering;
..\FreeRTOS\include\task.h(156): error:  #20: identifier "TaskFunction_t" is undefined
  	TaskFunction_t pvTaskCode;
..\FreeRTOS\include\task.h(160): error:  #20: identifier "UBaseType_t" is undefined
  	UBaseType_t uxPriority;
..\FreeRTOS\include\task.h(161): error:  #20: identifier "StackType_t" is undefined
  	StackType_t *puxStackBuffer;
..\FreeRTOS\include\task.h(162): error:  #20: identifier "portNUM_CONFIGURABLE_REGIONS" is undefined
  	MemoryRegion_t xRegions[ portNUM_CONFIGURABLE_REGIONS ];
..\FreeRTOS\include\task.h(169): error:  #20: identifier "TaskHandle_t" is undefined
  	TaskHandle_t xHandle;			/* The handle of the task to which the rest of the information in the structure relates. */
..\FreeRTOS\include\task.h(171): error:  #20: identifier "UBaseType_t" is undefined
  	UBaseType_t xTaskNumber;		/* A number unique to the task. */
..\FreeRTOS\include\task.h(172): error:  #757: variable "eTaskState"  is not a type name
  	eTaskState eCurrentState;		/* The state in which the task existed when the structure was populated. */
..\FreeRTOS\include\task.h(173): error:  #20: identifier "UBaseType_t" is undefined
  	UBaseType_t uxCurrentPriority;	/* The priority at which the task was running (may be inherited) when the structure was populated. */
..\FreeRTOS\include\task.h(174): error:  #20: identifier "UBaseType_t" is undefined
  	UBaseType_t uxBasePriority;		/* The priority to which the task will return if the task's current priority has been inherited to avoid unbounded priority inversion when obtaining a mutex.  Only valid if configUSE_MUTEXES is defined as 1 in FreeRTOSConfig.h. */
..\FreeRTOS\include\task.h(176): error:  #20: identifier "StackType_t" is undefined
  	StackType_t *pxStackBase;		/* Points to the lowest address of the task's stack area. */
..\FreeRTOS\include\task.h(602): error:  #20: identifier "TaskHandle_t" is undefined
  void vTaskAllocateMPURegions( TaskHandle_t xTask, const MemoryRegion_t * const pxRegions ) PRIVILEGED_FUNCTION;
..\FreeRTOS\include\task.h(602): error:  #130: expected a "{"
  void vTaskAllocateMPURegions( TaskHandle_t xTask, const MemoryRegion_t * const pxRegions ) PRIVILEGED_FUNCTION;
D:\Keil_v5\ARM\ARMCC\Bin\..\include\stdio.h(551): error:  #20: identifier "__va_list" is undefined
  extern _ARMABI int vfscanf(FILE * __restrict /*stream*/, const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1,2)));
D:\Keil_v5\ARM\ARMCC\Bin\..\include\stdio.h(552): error:  #20: identifier "__va_list" is undefined
  extern _ARMABI int vscanf(const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1)));
D:\Keil_v5\ARM\ARMCC\Bin\..\include\stdio.h(553): error:  #20: identifier "__va_list" is undefined
  extern _ARMABI int vsscanf(const char * __restrict /*s*/, const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1,2)));
D:\Keil_v5\ARM\ARMCC\Bin\..\include\stdio.h(555): error:  #20: identifier "__va_list" is undefined
  extern _ARMABI int _vfscanf(FILE * __restrict /*stream*/, const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1,2)));
..\FreeRTOS\src\queue.c: 1 warning, 30 errors
compiling tasks.c...
..\FreeRTOS\include\list.h(184): error:  #20: identifier "TickType_t" is undefined
  	configLIST_VOLATILE TickType_t xItemValue;			/*< The value being listed.  In most cases this is used to sort the list in descending order. */
..\FreeRTOS\include\list.h(196): error:  #20: identifier "TickType_t" is undefined
  	configLIST_VOLATILE TickType_t xItemValue;
..\FreeRTOS\include\list.h(208): error:  #20: identifier "UBaseType_t" is undefined
  	configLIST_VOLATILE UBaseType_t uxNumberOfItems;
..\FreeRTOS\include\list.h(386): error:  #130: expected a "{"
  void vListInitialise( List_t * const pxList ) PRIVILEGED_FUNCTION;
..\FreeRTOS\include\task.h(113): warning:  #12-D: parsing restarts here after previous syntax error
  {
..\FreeRTOS\include\task.h(114): error:  #20: identifier "eRunning" is undefined
  	eRunning = 0,	/* A task is querying the state of itself, so must be running. */
..\FreeRTOS\include\task.h(115): error:  #20: identifier "eReady" is undefined
  	eReady,			/* The task being queried is in a read or pending ready list. */
..\FreeRTOS\include\task.h(116): error:  #20: identifier "eBlocked" is undefined
  	eBlocked,		/* The task being queried is in the Blocked state. */
..\FreeRTOS\include\task.h(117): error:  #20: identifier "eSuspended" is undefined
  	eSuspended,		/* The task being queried is in the Suspended state, or is in the Blocked state with an infinite time out. */
..\FreeRTOS\include\task.h(118): error:  #20: identifier "eDeleted" is undefined
  	eDeleted,		/* The task being queried has been deleted, but its TCB has not yet been freed. */
..\FreeRTOS\include\task.h(119): error:  #20: identifier "eInvalid" is undefined
  	eInvalid			/* Used as an 'invalid state' value. */
..\FreeRTOS\include\task.h(120): error:  #65: expected a ";"
  } eTaskState;
..\FreeRTOS\include\task.h(120): error:  #77-D: this declaration has no storage class or type specifier
  } eTaskState;
..\FreeRTOS\include\task.h(137): error:  #20: identifier "BaseType_t" is undefined
  	BaseType_t xOverflowCount;
..\FreeRTOS\include\task.h(138): error:  #20: identifier "TickType_t" is undefined
  	TickType_t xTimeOnEntering;
..\FreeRTOS\include\task.h(156): error:  #20: identifier "TaskFunction_t" is undefined
  	TaskFunction_t pvTaskCode;
..\FreeRTOS\include\task.h(160): error:  #20: identifier "UBaseType_t" is undefined
  	UBaseType_t uxPriority;
..\FreeRTOS\include\task.h(161): error:  #20: identifier "StackType_t" is undefined
  	StackType_t *puxStackBuffer;
..\FreeRTOS\include\task.h(162): error:  #20: identifier "portNUM_CONFIGURABLE_REGIONS" is undefined
  	MemoryRegion_t xRegions[ portNUM_CONFIGURABLE_REGIONS ];
..\FreeRTOS\include\task.h(169): error:  #20: identifier "TaskHandle_t" is undefined
  	TaskHandle_t xHandle;			/* The handle of the task to which the rest of the information in the structure relates. */
..\FreeRTOS\include\task.h(171): error:  #20: identifier "UBaseType_t" is undefined
  	UBaseType_t xTaskNumber;		/* A number unique to the task. */
..\FreeRTOS\include\task.h(172): error:  #757: variable "eTaskState"  is not a type name
  	eTaskState eCurrentState;		/* The state in which the task existed when the structure was populated. */
..\FreeRTOS\include\task.h(173): error:  #20: identifier "UBaseType_t" is undefined
  	UBaseType_t uxCurrentPriority;	/* The priority at which the task was running (may be inherited) when the structure was populated. */
..\FreeRTOS\include\task.h(174): error:  #20: identifier "UBaseType_t" is undefined
  	UBaseType_t uxBasePriority;		/* The priority to which the task will return if the task's current priority has been inherited to avoid unbounded priority inversion when obtaining a mutex.  Only valid if configUSE_MUTEXES is defined as 1 in FreeRTOSConfig.h. */
..\FreeRTOS\include\task.h(176): error:  #20: identifier "StackType_t" is undefined
  	StackType_t *pxStackBase;		/* Points to the lowest address of the task's stack area. */
..\FreeRTOS\include\task.h(602): error:  #20: identifier "TaskHandle_t" is undefined
  void vTaskAllocateMPURegions( TaskHandle_t xTask, const MemoryRegion_t * const pxRegions ) PRIVILEGED_FUNCTION;
..\FreeRTOS\include\task.h(602): error:  #130: expected a "{"
  void vTaskAllocateMPURegions( TaskHandle_t xTask, const MemoryRegion_t * const pxRegions ) PRIVILEGED_FUNCTION;
D:\Keil_v5\ARM\ARMCC\Bin\..\include\stdio.h(551): error:  #20: identifier "__va_list" is undefined
  extern _ARMABI int vfscanf(FILE * __restrict /*stream*/, const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1,2)));
D:\Keil_v5\ARM\ARMCC\Bin\..\include\stdio.h(552): error:  #20: identifier "__va_list" is undefined
  extern _ARMABI int vscanf(const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1)));
D:\Keil_v5\ARM\ARMCC\Bin\..\include\stdio.h(553): error:  #20: identifier "__va_list" is undefined
  extern _ARMABI int vsscanf(const char * __restrict /*s*/, const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1,2)));
D:\Keil_v5\ARM\ARMCC\Bin\..\include\stdio.h(555): error:  #20: identifier "__va_list" is undefined
  extern _ARMABI int _vfscanf(FILE * __restrict /*stream*/, const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1,2)));
..\FreeRTOS\src\tasks.c: 1 warning, 30 errors
compiling timers.c...
..\FreeRTOS\include\list.h(184): error:  #20: identifier "TickType_t" is undefined
  	configLIST_VOLATILE TickType_t xItemValue;			/*< The value being listed.  In most cases this is used to sort the list in descending order. */
..\FreeRTOS\include\list.h(196): error:  #20: identifier "TickType_t" is undefined
  	configLIST_VOLATILE TickType_t xItemValue;
..\FreeRTOS\include\list.h(208): error:  #20: identifier "UBaseType_t" is undefined
  	configLIST_VOLATILE UBaseType_t uxNumberOfItems;
..\FreeRTOS\include\list.h(386): error:  #130: expected a "{"
  void vListInitialise( List_t * const pxList ) PRIVILEGED_FUNCTION;
..\FreeRTOS\include\task.h(113): warning:  #12-D: parsing restarts here after previous syntax error
  {
..\FreeRTOS\include\task.h(114): error:  #20: identifier "eRunning" is undefined
  	eRunning = 0,	/* A task is querying the state of itself, so must be running. */
..\FreeRTOS\include\task.h(115): error:  #20: identifier "eReady" is undefined
  	eReady,			/* The task being queried is in a read or pending ready list. */
..\FreeRTOS\include\task.h(116): error:  #20: identifier "eBlocked" is undefined
  	eBlocked,		/* The task being queried is in the Blocked state. */
..\FreeRTOS\include\task.h(117): error:  #20: identifier "eSuspended" is undefined
  	eSuspended,		/* The task being queried is in the Suspended state, or is in the Blocked state with an infinite time out. */
..\FreeRTOS\include\task.h(118): error:  #20: identifier "eDeleted" is undefined
  	eDeleted,		/* The task being queried has been deleted, but its TCB has not yet been freed. */
..\FreeRTOS\include\task.h(119): error:  #20: identifier "eInvalid" is undefined
  	eInvalid			/* Used as an 'invalid state' value. */
..\FreeRTOS\include\task.h(120): error:  #65: expected a ";"
  } eTaskState;
..\FreeRTOS\include\task.h(120): error:  #77-D: this declaration has no storage class or type specifier
  } eTaskState;
..\FreeRTOS\include\task.h(137): error:  #20: identifier "BaseType_t" is undefined
  	BaseType_t xOverflowCount;
..\FreeRTOS\include\task.h(138): error:  #20: identifier "TickType_t" is undefined
  	TickType_t xTimeOnEntering;
..\FreeRTOS\include\task.h(156): error:  #20: identifier "TaskFunction_t" is undefined
  	TaskFunction_t pvTaskCode;
..\FreeRTOS\include\task.h(160): error:  #20: identifier "UBaseType_t" is undefined
  	UBaseType_t uxPriority;
..\FreeRTOS\include\task.h(161): error:  #20: identifier "StackType_t" is undefined
  	StackType_t *puxStackBuffer;
..\FreeRTOS\include\task.h(162): error:  #20: identifier "portNUM_CONFIGURABLE_REGIONS" is undefined
  	MemoryRegion_t xRegions[ portNUM_CONFIGURABLE_REGIONS ];
..\FreeRTOS\include\task.h(169): error:  #20: identifier "TaskHandle_t" is undefined
  	TaskHandle_t xHandle;			/* The handle of the task to which the rest of the information in the structure relates. */
..\FreeRTOS\include\task.h(171): error:  #20: identifier "UBaseType_t" is undefined
  	UBaseType_t xTaskNumber;		/* A number unique to the task. */
..\FreeRTOS\include\task.h(172): error:  #757: variable "eTaskState"  is not a type name
  	eTaskState eCurrentState;		/* The state in which the task existed when the structure was populated. */
..\FreeRTOS\include\task.h(173): error:  #20: identifier "UBaseType_t" is undefined
  	UBaseType_t uxCurrentPriority;	/* The priority at which the task was running (may be inherited) when the structure was populated. */
..\FreeRTOS\include\task.h(174): error:  #20: identifier "UBaseType_t" is undefined
  	UBaseType_t uxBasePriority;		/* The priority to which the task will return if the task's current priority has been inherited to avoid unbounded priority inversion when obtaining a mutex.  Only valid if configUSE_MUTEXES is defined as 1 in FreeRTOSConfig.h. */
..\FreeRTOS\include\task.h(176): error:  #20: identifier "StackType_t" is undefined
  	StackType_t *pxStackBase;		/* Points to the lowest address of the task's stack area. */
..\FreeRTOS\include\task.h(602): error:  #20: identifier "TaskHandle_t" is undefined
  void vTaskAllocateMPURegions( TaskHandle_t xTask, const MemoryRegion_t * const pxRegions ) PRIVILEGED_FUNCTION;
..\FreeRTOS\include\task.h(602): error:  #130: expected a "{"
  void vTaskAllocateMPURegions( TaskHandle_t xTask, const MemoryRegion_t * const pxRegions ) PRIVILEGED_FUNCTION;
D:\Keil_v5\ARM\ARMCC\Bin\..\include\stdio.h(551): error:  #20: identifier "__va_list" is undefined
  extern _ARMABI int vfscanf(FILE * __restrict /*stream*/, const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1,2)));
D:\Keil_v5\ARM\ARMCC\Bin\..\include\stdio.h(552): error:  #20: identifier "__va_list" is undefined
  extern _ARMABI int vscanf(const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1)));
D:\Keil_v5\ARM\ARMCC\Bin\..\include\stdio.h(553): error:  #20: identifier "__va_list" is undefined
  extern _ARMABI int vsscanf(const char * __restrict /*s*/, const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1,2)));
D:\Keil_v5\ARM\ARMCC\Bin\..\include\stdio.h(555): error:  #20: identifier "__va_list" is undefined
  extern _ARMABI int _vfscanf(FILE * __restrict /*stream*/, const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1,2)));
..\FreeRTOS\src\timers.c: 1 warning, 30 errors
compiling heap_4.c...
..\FreeRTOS\include\list.h(184): error:  #20: identifier "TickType_t" is undefined
  	configLIST_VOLATILE TickType_t xItemValue;			/*< The value being listed.  In most cases this is used to sort the list in descending order. */
..\FreeRTOS\include\list.h(196): error:  #20: identifier "TickType_t" is undefined
  	configLIST_VOLATILE TickType_t xItemValue;
..\FreeRTOS\include\list.h(208): error:  #20: identifier "UBaseType_t" is undefined
  	configLIST_VOLATILE UBaseType_t uxNumberOfItems;
..\FreeRTOS\include\list.h(386): error:  #130: expected a "{"
  void vListInitialise( List_t * const pxList ) PRIVILEGED_FUNCTION;
..\FreeRTOS\include\task.h(113): warning:  #12-D: parsing restarts here after previous syntax error
  {
..\FreeRTOS\include\task.h(114): error:  #20: identifier "eRunning" is undefined
  	eRunning = 0,	/* A task is querying the state of itself, so must be running. */
..\FreeRTOS\include\task.h(115): error:  #20: identifier "eReady" is undefined
  	eReady,			/* The task being queried is in a read or pending ready list. */
..\FreeRTOS\include\task.h(116): error:  #20: identifier "eBlocked" is undefined
  	eBlocked,		/* The task being queried is in the Blocked state. */
..\FreeRTOS\include\task.h(117): error:  #20: identifier "eSuspended" is undefined
  	eSuspended,		/* The task being queried is in the Suspended state, or is in the Blocked state with an infinite time out. */
..\FreeRTOS\include\task.h(118): error:  #20: identifier "eDeleted" is undefined
  	eDeleted,		/* The task being queried has been deleted, but its TCB has not yet been freed. */
..\FreeRTOS\include\task.h(119): error:  #20: identifier "eInvalid" is undefined
  	eInvalid			/* Used as an 'invalid state' value. */
..\FreeRTOS\include\task.h(120): error:  #65: expected a ";"
  } eTaskState;
..\FreeRTOS\include\task.h(120): error:  #77-D: this declaration has no storage class or type specifier
  } eTaskState;
..\FreeRTOS\include\task.h(137): error:  #20: identifier "BaseType_t" is undefined
  	BaseType_t xOverflowCount;
..\FreeRTOS\include\task.h(138): error:  #20: identifier "TickType_t" is undefined
  	TickType_t xTimeOnEntering;
..\FreeRTOS\include\task.h(156): error:  #20: identifier "TaskFunction_t" is undefined
  	TaskFunction_t pvTaskCode;
..\FreeRTOS\include\task.h(160): error:  #20: identifier "UBaseType_t" is undefined
  	UBaseType_t uxPriority;
..\FreeRTOS\include\task.h(161): error:  #20: identifier "StackType_t" is undefined
  	StackType_t *puxStackBuffer;
..\FreeRTOS\include\task.h(162): error:  #20: identifier "portNUM_CONFIGURABLE_REGIONS" is undefined
  	MemoryRegion_t xRegions[ portNUM_CONFIGURABLE_REGIONS ];
..\FreeRTOS\include\task.h(169): error:  #20: identifier "TaskHandle_t" is undefined
  	TaskHandle_t xHandle;			/* The handle of the task to which the rest of the information in the structure relates. */
..\FreeRTOS\include\task.h(171): error:  #20: identifier "UBaseType_t" is undefined
  	UBaseType_t xTaskNumber;		/* A number unique to the task. */
..\FreeRTOS\include\task.h(172): error:  #757: variable "eTaskState"  is not a type name
  	eTaskState eCurrentState;		/* The state in which the task existed when the structure was populated. */
..\FreeRTOS\include\task.h(173): error:  #20: identifier "UBaseType_t" is undefined
  	UBaseType_t uxCurrentPriority;	/* The priority at which the task was running (may be inherited) when the structure was populated. */
..\FreeRTOS\include\task.h(174): error:  #20: identifier "UBaseType_t" is undefined
  	UBaseType_t uxBasePriority;		/* The priority to which the task will return if the task's current priority has been inherited to avoid unbounded priority inversion when obtaining a mutex.  Only valid if configUSE_MUTEXES is defined as 1 in FreeRTOSConfig.h. */
..\FreeRTOS\include\task.h(176): error:  #20: identifier "StackType_t" is undefined
  	StackType_t *pxStackBase;		/* Points to the lowest address of the task's stack area. */
..\FreeRTOS\include\task.h(602): error:  #20: identifier "TaskHandle_t" is undefined
  void vTaskAllocateMPURegions( TaskHandle_t xTask, const MemoryRegion_t * const pxRegions ) PRIVILEGED_FUNCTION;
..\FreeRTOS\include\task.h(602): error:  #130: expected a "{"
  void vTaskAllocateMPURegions( TaskHandle_t xTask, const MemoryRegion_t * const pxRegions ) PRIVILEGED_FUNCTION;
D:\Keil_v5\ARM\ARMCC\Bin\..\include\stdio.h(551): error:  #20: identifier "__va_list" is undefined
  extern _ARMABI int vfscanf(FILE * __restrict /*stream*/, const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1,2)));
D:\Keil_v5\ARM\ARMCC\Bin\..\include\stdio.h(552): error:  #20: identifier "__va_list" is undefined
  extern _ARMABI int vscanf(const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1)));
D:\Keil_v5\ARM\ARMCC\Bin\..\include\stdio.h(553): error:  #20: identifier "__va_list" is undefined
  extern _ARMABI int vsscanf(const char * __restrict /*s*/, const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1,2)));
D:\Keil_v5\ARM\ARMCC\Bin\..\include\stdio.h(555): error:  #20: identifier "__va_list" is undefined
  extern _ARMABI int _vfscanf(FILE * __restrict /*stream*/, const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1,2)));
..\FreeRTOS\port\MemMang\heap_4.c: 1 warning, 30 errors
compiling port.c...
..\FreeRTOS\include\list.h(184): error:  #20: identifier "TickType_t" is undefined
  	configLIST_VOLATILE TickType_t xItemValue;			/*< The value being listed.  In most cases this is used to sort the list in descending order. */
..\FreeRTOS\include\list.h(196): error:  #20: identifier "TickType_t" is undefined
  	configLIST_VOLATILE TickType_t xItemValue;
..\FreeRTOS\include\list.h(208): error:  #20: identifier "UBaseType_t" is undefined
  	configLIST_VOLATILE UBaseType_t uxNumberOfItems;
..\FreeRTOS\include\list.h(386): error:  #130: expected a "{"
  void vListInitialise( List_t * const pxList ) PRIVILEGED_FUNCTION;
..\FreeRTOS\include\task.h(113): warning:  #12-D: parsing restarts here after previous syntax error
  {
..\FreeRTOS\include\task.h(114): error:  #20: identifier "eRunning" is undefined
  	eRunning = 0,	/* A task is querying the state of itself, so must be running. */
..\FreeRTOS\include\task.h(115): error:  #20: identifier "eReady" is undefined
  	eReady,			/* The task being queried is in a read or pending ready list. */
..\FreeRTOS\include\task.h(116): error:  #20: identifier "eBlocked" is undefined
  	eBlocked,		/* The task being queried is in the Blocked state. */
..\FreeRTOS\include\task.h(117): error:  #20: identifier "eSuspended" is undefined
  	eSuspended,		/* The task being queried is in the Suspended state, or is in the Blocked state with an infinite time out. */
..\FreeRTOS\include\task.h(118): error:  #20: identifier "eDeleted" is undefined
  	eDeleted,		/* The task being queried has been deleted, but its TCB has not yet been freed. */
..\FreeRTOS\include\task.h(119): error:  #20: identifier "eInvalid" is undefined
  	eInvalid			/* Used as an 'invalid state' value. */
..\FreeRTOS\include\task.h(120): error:  #65: expected a ";"
  } eTaskState;
..\FreeRTOS\include\task.h(120): error:  #77-D: this declaration has no storage class or type specifier
  } eTaskState;
..\FreeRTOS\include\task.h(137): error:  #20: identifier "BaseType_t" is undefined
  	BaseType_t xOverflowCount;
..\FreeRTOS\include\task.h(138): error:  #20: identifier "TickType_t" is undefined
  	TickType_t xTimeOnEntering;
..\FreeRTOS\include\task.h(156): error:  #20: identifier "TaskFunction_t" is undefined
  	TaskFunction_t pvTaskCode;
..\FreeRTOS\include\task.h(160): error:  #20: identifier "UBaseType_t" is undefined
  	UBaseType_t uxPriority;
..\FreeRTOS\include\task.h(161): error:  #20: identifier "StackType_t" is undefined
  	StackType_t *puxStackBuffer;
..\FreeRTOS\include\task.h(162): error:  #20: identifier "portNUM_CONFIGURABLE_REGIONS" is undefined
  	MemoryRegion_t xRegions[ portNUM_CONFIGURABLE_REGIONS ];
..\FreeRTOS\include\task.h(169): error:  #20: identifier "TaskHandle_t" is undefined
  	TaskHandle_t xHandle;			/* The handle of the task to which the rest of the information in the structure relates. */
..\FreeRTOS\include\task.h(171): error:  #20: identifier "UBaseType_t" is undefined
  	UBaseType_t xTaskNumber;		/* A number unique to the task. */
..\FreeRTOS\include\task.h(172): error:  #757: variable "eTaskState"  is not a type name
  	eTaskState eCurrentState;		/* The state in which the task existed when the structure was populated. */
..\FreeRTOS\include\task.h(173): error:  #20: identifier "UBaseType_t" is undefined
  	UBaseType_t uxCurrentPriority;	/* The priority at which the task was running (may be inherited) when the structure was populated. */
..\FreeRTOS\include\task.h(174): error:  #20: identifier "UBaseType_t" is undefined
  	UBaseType_t uxBasePriority;		/* The priority to which the task will return if the task's current priority has been inherited to avoid unbounded priority inversion when obtaining a mutex.  Only valid if configUSE_MUTEXES is defined as 1 in FreeRTOSConfig.h. */
..\FreeRTOS\include\task.h(176): error:  #20: identifier "StackType_t" is undefined
  	StackType_t *pxStackBase;		/* Points to the lowest address of the task's stack area. */
..\FreeRTOS\include\task.h(602): error:  #20: identifier "TaskHandle_t" is undefined
  void vTaskAllocateMPURegions( TaskHandle_t xTask, const MemoryRegion_t * const pxRegions ) PRIVILEGED_FUNCTION;
..\FreeRTOS\include\task.h(602): error:  #130: expected a "{"
  void vTaskAllocateMPURegions( TaskHandle_t xTask, const MemoryRegion_t * const pxRegions ) PRIVILEGED_FUNCTION;
D:\Keil_v5\ARM\ARMCC\Bin\..\include\stdio.h(551): error:  #20: identifier "__va_list" is undefined
  extern _ARMABI int vfscanf(FILE * __restrict /*stream*/, const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1,2)));
D:\Keil_v5\ARM\ARMCC\Bin\..\include\stdio.h(552): error:  #20: identifier "__va_list" is undefined
  extern _ARMABI int vscanf(const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1)));
D:\Keil_v5\ARM\ARMCC\Bin\..\include\stdio.h(553): error:  #20: identifier "__va_list" is undefined
  extern _ARMABI int vsscanf(const char * __restrict /*s*/, const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1,2)));
D:\Keil_v5\ARM\ARMCC\Bin\..\include\stdio.h(555): error:  #20: identifier "__va_list" is undefined
  extern _ARMABI int _vfscanf(FILE * __restrict /*stream*/, const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1,2)));
..\FreeRTOS\port\RVDS\ARM_CM3\port.c: 1 warning, 30 errors
".\Objects\BH-F103.axf" - 330 Error(s), 11 Warning(s).

<h2>Software Packages used:</h2>

Package Vendor: Keil
                http://www.keil.com/pack/Keil.STM32F1xx_DFP.2.3.0.pack
                Keil.STM32F1xx_DFP.2.3.0
                STMicroelectronics STM32F1 Series Device Support, Drivers and Examples

<h2>Collection of Component include folders:</h2>
  .\RTE\_Target_1
  D:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.3.0\Device\Include

<h2>Collection of Component Files used:</h2>
Target not created.
Build Time Elapsed:  00:00:01
</pre>
</body>
</html>
